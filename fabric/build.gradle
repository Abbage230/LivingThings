import groovy.json.JsonOutput
import groovy.json.JsonSlurper

plugins {
    id 'idea'
    id 'fabric-loom'
}

base {
    version = "${minecraft_version}-${mod_version}"
    archivesBaseName = "${mod_id}-fabric"
}

repositories {
    maven {
        url "https://maven.terraformersmc.com/releases"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation project(":common")

    modImplementation "vazkii.patchouli:Patchouli:${patchouli_version}-FABRIC"
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
}

loom {
    mixin.defaultRefmapName = "livingthings.refmap.json"
    //accessWidenerPath = file("src/main/resources/explorations.accesswidener")
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }

    // minify json files
    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

tasks.withType(JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}
